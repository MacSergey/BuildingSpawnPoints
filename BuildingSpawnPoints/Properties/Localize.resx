<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Mod_Description" xml:space="preserve">
    <value>Change and add vehicles spawn points</value>
  </data>
  <data name="Mod_WhatsNewMessage1_0_1" xml:space="preserve">
    <value>[FIXED] Resolved conflict with More Effective Transfer Manager mod.
[TRANSLATION] Added Dutch, French and Portuguese translations.</value>
  </data>
  <data name="Mod_WhatsNewMessage1_0_2" xml:space="preserve">
    <value>[TRANSLATION] Added Italian translation.</value>
  </data>
  <data name="Mod_WhatsNewMessage1_1" xml:space="preserve">
    <value>[NEW] Added depot (bus, trolley, tram, train, copter, blimp, etc). Now posible make custom depots.
[NEW] Added transport station, but it will work only like depot. Stop position set by transport line.
[NEW] Added cargo stations (train, plane, ship). Truck points not implimented yet.
[NEW] Added fishing harbor(fishing boat), shelter(evacuation bus), tour building(tour bus, balloon).
[NEW] Added copters (police, ambulance, fire, disaster, passenger).
[NEW] Added point height.
[FIXED] Fixed police car, fire truck, park maintenance and disaster response unspawn.</value>
  </data>
  <data name="Mod_WhatsNewMessage1_2" xml:space="preserve">
    <value>[NEW] Added a warning if the point is too far from the road. The point should be no further than 32 meters from the closer road, otherwise pathfinder will not be able to find path for vehicle. That vehicle types will red.
[NEW] Added highlighting that show closer road to point. Hover vehicle type to show it.
[UPDATED] The zero height value is now equal to the height of the terrain under the point, so it fixed points on hills or above the water.
[NEW] Added mod button to UnifiedUI.
[NEW] Added warning about missing libraries for Linux users.</value>
  </data>
  <data name="Mod_WhatsNewMessage1_2_1" xml:space="preserve">
    <value>[TRANSLATION] Added Korean translation.</value>
  </data>
  <data name="Mod_WhatsNewMessage1_2_2" xml:space="preserve">
    <value>[TRANSLATION] Added Hungarian translation.</value>
  </data>
  <data name="Mod_WhatsNewMessage1_2_3" xml:space="preserve">
    <value>[TRANSLATION] Added Danish and Turkish translations.</value>
  </data>
  <data name="Mod_WhatsNewMessage1_2_4" xml:space="preserve">
    <value>[TRANSLATION] Added Czech and Romanian translations.</value>
  </data>
  <data name="Mod_WhatsNewMessage1_3" xml:space="preserve">
    <value>[UPDATED] Added Plazas &amp; Promenades DLC support.</value>
  </data>
  <data name="Mod_WhatsNewMessage1_3_1" xml:space="preserve">
    <value>[FIXED] Police car spawn point.
[FIXED] Infinity fire trucks and disaster response trucks.</value>
  </data>
  <data name="Mod_WhatsNewMessage1_3_2" xml:space="preserve">
    <value>[NEW] Added support of bank trucks from Financial Districts DLC.</value>
  </data>
  <data name="Panel_AddAllVehicle" xml:space="preserve">
    <value>Add all types of vehicles</value>
  </data>
  <data name="Panel_AddPoint" xml:space="preserve">
    <value>Add point</value>
  </data>
  <data name="Panel_AddVehicle" xml:space="preserve">
    <value>Add vehicle type</value>
  </data>
  <data name="Panel_AddVehicleGroup" xml:space="preserve">
    <value>Add vehicle type group</value>
  </data>
  <data name="Panel_AngleFormat" xml:space="preserve">
    <value>{0}°</value>
  </data>
  <data name="Panel_ApplyToAll" xml:space="preserve">
    <value>Apply to all buildings of this type</value>
  </data>
  <data name="Panel_Copy" xml:space="preserve">
    <value>Copy</value>
  </data>
  <data name="Panel_CopyPoint" xml:space="preserve">
    <value>Copy point</value>
  </data>
  <data name="Panel_DuplicatePoint" xml:space="preserve">
    <value>Duplicate point</value>
  </data>
  <data name="Panel_NoPointWarning" xml:space="preserve">
    <value>No point in this building contains these types of vehicles:</value>
  </data>
  <data name="Panel_NoPointWarningContinue" xml:space="preserve">
    <value>They will spawn in default position.</value>
  </data>
  <data name="Panel_Paste" xml:space="preserve">
    <value>Paste</value>
  </data>
  <data name="Panel_PastePointAppend" xml:space="preserve">
    <value>Paste point (append vehicle types)</value>
  </data>
  <data name="Panel_PastePointReplace" xml:space="preserve">
    <value>Paste point (replace vehicle types)</value>
  </data>
  <data name="Panel_PositionFormat" xml:space="preserve">
    <value>{0}m</value>
  </data>
  <data name="Panel_ResetToDefault" xml:space="preserve">
    <value>Reset to default</value>
  </data>
  <data name="Panel_Title" xml:space="preserve">
    <value>Building #{0}</value>
  </data>
  <data name="Panel_TooFarPoint" xml:space="preserve">
    <value>This point placed too far from road for some type of vehicles, move it closer, otherwise it will not work</value>
  </data>
  <data name="PointType_Middle" xml:space="preserve">
    <value>Middle</value>
  </data>
  <data name="PointType_Spawn" xml:space="preserve">
    <value>Spawn</value>
  </data>
  <data name="PointType_Unspawn" xml:space="preserve">
    <value>Unspawn</value>
  </data>
  <data name="Property_PointType" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="Property_Position" xml:space="preserve">
    <value>Position</value>
  </data>
  <data name="Tool_ApplyToAllCaption" xml:space="preserve">
    <value>Apply to all buildings of type</value>
  </data>
  <data name="Tool_ApplyToAllMessage" xml:space="preserve">
    <value>Do you really want apply this setting to all buildings of this type?</value>
  </data>
  <data name="Tool_InfoHoverBuilding" xml:space="preserve">
    <value>Building #{0}</value>
  </data>
  <data name="Tool_InfoSelectBuilding" xml:space="preserve">
    <value>Select building</value>
  </data>
  <data name="VehicleTypeGroup_Air" xml:space="preserve">
    <value>Air vehicles</value>
  </data>
  <data name="VehicleTypeGroup_Cargo" xml:space="preserve">
    <value>Cargo vehicles</value>
  </data>
  <data name="VehicleTypeGroup_Copters" xml:space="preserve">
    <value>Copters</value>
  </data>
  <data name="VehicleTypeGroup_Default" xml:space="preserve">
    <value>Default vehicles</value>
  </data>
  <data name="VehicleTypeGroup_Passenger" xml:space="preserve">
    <value>Passenger vehicles</value>
  </data>
  <data name="VehicleTypeGroup_PassengerAir" xml:space="preserve">
    <value>Passenger air vehicles</value>
  </data>
  <data name="VehicleTypeGroup_PassengerRail" xml:space="preserve">
    <value>Passenger rail vehicles</value>
  </data>
  <data name="VehicleTypeGroup_PassengerRoad" xml:space="preserve">
    <value>Passenger road vehicles</value>
  </data>
  <data name="VehicleTypeGroup_PassengerWater" xml:space="preserve">
    <value>Passenger water vehicles</value>
  </data>
  <data name="VehicleTypeGroup_Planes" xml:space="preserve">
    <value>Planes</value>
  </data>
  <data name="VehicleTypeGroup_Rail" xml:space="preserve">
    <value>Rail vehicles</value>
  </data>
  <data name="VehicleTypeGroup_Road" xml:space="preserve">
    <value>Road vehicles</value>
  </data>
  <data name="VehicleTypeGroup_Service" xml:space="preserve">
    <value>Service vehicles</value>
  </data>
  <data name="VehicleTypeGroup_Ships" xml:space="preserve">
    <value>Ships</value>
  </data>
  <data name="VehicleTypeGroup_Trains" xml:space="preserve">
    <value>Trains</value>
  </data>
  <data name="VehicleTypeGroup_Trucks" xml:space="preserve">
    <value>Trucks</value>
  </data>
  <data name="VehicleTypeGroup_Water" xml:space="preserve">
    <value>Water vehicles</value>
  </data>
  <data name="VehicleType_All" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="VehicleType_Ambulance" xml:space="preserve">
    <value>Ambulance</value>
  </data>
  <data name="VehicleType_AmbulanceCopter" xml:space="preserve">
    <value>Ambulance copter</value>
  </data>
  <data name="VehicleType_Balloon" xml:space="preserve">
    <value>Balloon</value>
  </data>
  <data name="VehicleType_BankTruck" xml:space="preserve">
    <value>Bank truck</value>
  </data>
  <data name="VehicleType_Bicycle" xml:space="preserve">
    <value>Bicycle</value>
  </data>
  <data name="VehicleType_Bus" xml:space="preserve">
    <value>Bus</value>
  </data>
  <data name="VehicleType_CableCar" xml:space="preserve">
    <value>Cable car</value>
  </data>
  <data name="VehicleType_CargoPlane" xml:space="preserve">
    <value>Cargo plane</value>
  </data>
  <data name="VehicleType_CargoShip" xml:space="preserve">
    <value>Cargo ship</value>
  </data>
  <data name="VehicleType_CargoTrain" xml:space="preserve">
    <value>Cargo train</value>
  </data>
  <data name="VehicleType_CargoTruck" xml:space="preserve">
    <value>Cargo truck</value>
  </data>
  <data name="VehicleType_DisasterCopter" xml:space="preserve">
    <value>Disaster response copter</value>
  </data>
  <data name="VehicleType_DisasterResponse" xml:space="preserve">
    <value>Disaster response</value>
  </data>
  <data name="VehicleType_FireCopter" xml:space="preserve">
    <value>Fire copter</value>
  </data>
  <data name="VehicleType_FireTruck" xml:space="preserve">
    <value>Fire truck</value>
  </data>
  <data name="VehicleType_FishingBoat" xml:space="preserve">
    <value>Fishing boat</value>
  </data>
  <data name="VehicleType_GarbageTruck" xml:space="preserve">
    <value>Garbage truck</value>
  </data>
  <data name="VehicleType_Hearse" xml:space="preserve">
    <value>Hearse</value>
  </data>
  <data name="VehicleType_MetroTrain" xml:space="preserve">
    <value>Metro</value>
  </data>
  <data name="VehicleType_Monorail" xml:space="preserve">
    <value>Monorail</value>
  </data>
  <data name="VehicleType_ParkMaintenanceTruck" xml:space="preserve">
    <value>Park maintenance</value>
  </data>
  <data name="VehicleType_PassengerBlimp" xml:space="preserve">
    <value>Passenger blimp</value>
  </data>
  <data name="VehicleType_PassengerCopter" xml:space="preserve">
    <value>Passenger copter</value>
  </data>
  <data name="VehicleType_PassengerFerry" xml:space="preserve">
    <value>Passenger ferry</value>
  </data>
  <data name="VehicleType_PassengerPlane" xml:space="preserve">
    <value>Passenger plane</value>
  </data>
  <data name="VehicleType_PassengerShip" xml:space="preserve">
    <value>Passenger ship</value>
  </data>
  <data name="VehicleType_PassengerTrain" xml:space="preserve">
    <value>Passenger train</value>
  </data>
  <data name="VehicleType_Police" xml:space="preserve">
    <value>Police</value>
  </data>
  <data name="VehicleType_PoliceCopter" xml:space="preserve">
    <value>Police copter</value>
  </data>
  <data name="VehicleType_PostTruck" xml:space="preserve">
    <value>Post</value>
  </data>
  <data name="VehicleType_PrivatePlane" xml:space="preserve">
    <value>Private plane</value>
  </data>
  <data name="VehicleType_RoadMaintenanceTruck" xml:space="preserve">
    <value>Road maintenance</value>
  </data>
  <data name="VehicleType_Rocket" xml:space="preserve">
    <value>Rocket</value>
  </data>
  <data name="VehicleType_SnowTruck" xml:space="preserve">
    <value>Snowplow</value>
  </data>
  <data name="VehicleType_Taxi" xml:space="preserve">
    <value>Taxi</value>
  </data>
  <data name="VehicleType_Tram" xml:space="preserve">
    <value>Tram</value>
  </data>
  <data name="VehicleType_Trolleybus" xml:space="preserve">
    <value>Trolleybus</value>
  </data>
  <data name="VehicleType_VacuumTruck" xml:space="preserve">
    <value>Vacuum truck</value>
  </data>
</root>